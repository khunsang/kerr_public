# Import useful things
from numpy import exp,sqrt

# Define a dictionary to hold the lambda function for each QNM
A_strain_np = {
			  ((2, 1), (2, 1, 0)): lambda eta,chi_s: eta*sqrt(1-4.0*eta)*(2.105241756331*exp(2.654109987264j) + 2.647958479425*exp(5.943199221634j)*(chi_s) + 2.326522426708*exp(5.438929334204j)*(eta) + 5.787856658045*exp(2.155341214176j)*(eta*chi_s) + 0.792471192892*exp(5.161849345768j)*(chi_s*chi_s) ),
			  ((2, 2), (2, 2, 1)): lambda eta,chi_s: eta*(65.330832947702*exp(0.565624612055j) + 1075.039005314249*exp(3.629944889160j)*(eta) + 6526.893454262360*exp(0.528890543125j)*(eta*eta) + 209.385067798115*exp(0.338079260035j)*(eta*chi_s) + 126.221128775796*exp(5.331616730641j)*(eta*chi_s*chi_s) + 526.058323472156*exp(3.941018369744j)*(eta*eta*chi_s) + 12183.095661149504*exp(3.778977120789j)*(eta*eta*eta) + 24.160569428192*exp(4.029738056538j)*(chi_s*chi_s*chi_s) ),
			  ((2, 2), (2, 2, 0)): lambda eta,chi_s: eta*(-4.047904333555 + -0.671709576481*(chi_s) + 0.189610006422*(chi_s*chi_s) ),
			  ((3, 2), (3, 2, 0)): lambda eta,chi_s: eta*(0.918750663233*exp(1.667231643123j) + 0.369518355285*exp(5.455914900706j)*(chi_s) + 5.958935497532*exp(4.449242284982j)*(eta) + 0.486033402454*exp(4.641306021618j)*(chi_s*chi_s) + 10.811949464729*exp(0.644905034088j)*(eta*eta) + 1.921719444563*exp(1.452932422275j)*(eta*chi_s*chi_s) + 8.549375553729*exp(2.291581781759j)*(eta*eta*chi_s) ),
			  ((3, 3), (3, 3, 0)): lambda eta,chi_s: eta*sqrt(1-4.0*eta)*(2.035936899843*exp(2.402995003631j) + 1.037796970041*exp(3.616845724084j)*(chi_s) + 2.041401891411*exp(5.042317267015j)*(chi_s*chi_s) + 18.563787025611*exp(3.933612666476j)*(eta*eta) + 8.691282968698*exp(2.148793900822j)*(eta*chi_s*chi_s) ),
			  ((3, 2), (2, 2, 0)): lambda eta,chi_s: eta*(0.052620319317*exp(5.307294078444j) + 0.480436918198*exp(3.395546623016j)*(chi_s) + 1.238179394939*exp(2.951838498995j)*(eta) + 1.132306943103*exp(0.673122320539j)*(eta*chi_s) + 0.123464133059*exp(2.703489721025j)*(chi_s*chi_s) ),
			  ((3, 3), (3, 3, 1)): lambda eta,chi_s: eta*sqrt(1-4.0*eta)*(61.961841354034*exp(4.999890461114j) + 977.749853356686*exp(1.646264673579j)*(eta) + 62.028510406715*exp(2.603417692091j)*(chi_s*chi_s) + 5156.423640495599*exp(4.721156379254j)*(eta*eta) + 98.075319418149*exp(5.547277437138j)*(eta*chi_s) + 390.477444482276*exp(5.726938893962j)*(eta*chi_s*chi_s) + 8193.280804204565*exp(1.488798256594j)*(eta*eta*eta) ),
			  ((4, 3), (3, 3, 0)): lambda eta,chi_s: eta*sqrt(1-4.0*eta)*(0.251654011853*exp(2.953833695665j)*(chi_s) + 0.514803526003*exp(2.192280783622j)*(eta) + 1.964027269554*exp(3.373976874874j)*(eta*eta) + 0.158895732034*exp(3.312756808444j)*(chi_s*chi_s) ),
			  ((4, 4), (4, 4, 0)): lambda eta,chi_s: eta*(1.068848730301*exp(1.526309994643j) + 0.394027043142*exp(3.190432039345j)*(chi_s) + 7.374962043107*exp(4.012181257297j)*(eta) + 21.305188817869*exp(0.240504141996j)*(eta*eta) + 29.320930160169*exp(0.138716376160j)*(eta*eta*eta*chi_s) ),
			  ((4, 3), (4, 3, 0)): lambda eta,chi_s: eta*sqrt(1-4.0*eta)*(0.487931310435*exp(0.931898646010j) + 0.240929622507*exp(4.837275511017j)*(chi_s) + 4.182715753213*exp(3.700089427576j)*(eta) + 10.953414460058*exp(6.254750851166j)*(eta*eta) + 1.514287708671*exp(1.857540770675j)*(eta*chi_s) )
			  }
